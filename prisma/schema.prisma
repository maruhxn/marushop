// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String
  password String?
  googleId String?
  kakaoId  String?
  isAdmin  Boolean @default(false)
  isVerified Boolean @default(false)

  cartItems CartItem[]
  orders    Order[]
}

model Category {
  id    Int     @id @default(autoincrement())
  title String
  slug  String? @unique

  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String?  @unique
  description String
  price       Int
  image       String?
  createdAt   DateTime @default(now())

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onUpdate: Cascade)

  cartItems  CartItem[]
  orderItems OrderItem[]

  @@index([title])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model CartItem {
  quantity Int

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([userId, productId])
}

model Order {
  id         Int      @id @default(autoincrement())
  orderDate  DateTime @default(now())
  totalPrice Int
  isPaid     Boolean @default(false)

  userId Int 
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  orderItems OrderItem[]

  @@index([userId])
}

model OrderItem {
  quantity Int

  orderId Int
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([orderId, productId])
}
